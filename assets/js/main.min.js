/* Copyright (c) 2010-2013 Marcus Westin */
this.JSON||(this.JSON={}),function(){function f(e){return e<10?"0"+e:e}function quote(e){return escapable.lastIndex=0,escapable.test(e)?'"'+e.replace(escapable,function(e){var t=meta[e];return typeof t=="string"?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var n,r,i,s,o=gap,u,a=t[e];a&&typeof a=="object"&&typeof a.toJSON=="function"&&(a=a.toJSON(e)),typeof rep=="function"&&(a=rep.call(t,e,a));switch(typeof a){case"string":return quote(a);case"number":return isFinite(a)?String(a):"null";case"boolean":case"null":return String(a);case"object":if(!a)return"null";gap+=indent,u=[];if(Object.prototype.toString.apply(a)==="[object Array]"){s=a.length;for(n=0;n<s;n+=1)u[n]=str(n,a)||"null";return i=u.length===0?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+o+"]":"["+u.join(",")+"]",gap=o,i}if(rep&&typeof rep=="object"){s=rep.length;for(n=0;n<s;n+=1)r=rep[n],typeof r=="string"&&(i=str(r,a),i&&u.push(quote(r)+(gap?": ":":")+i))}else for(r in a)Object.hasOwnProperty.call(a,r)&&(i=str(r,a),i&&u.push(quote(r)+(gap?": ":":")+i));return i=u.length===0?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+o+"}":"{"+u.join(",")+"}",gap=o,i}}typeof Date.prototype.toJSON!="function"&&(Date.prototype.toJSON=function(e){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(e){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;typeof JSON.stringify!="function"&&(JSON.stringify=function(e,t,n){var r;gap="",indent="";if(typeof n=="number")for(r=0;r<n;r+=1)indent+=" ";else typeof n=="string"&&(indent=n);rep=t;if(!t||typeof t=="function"||typeof t=="object"&&typeof t.length=="number")return str("",{"":e});throw new Error("JSON.stringify")}),typeof JSON.parse!="function"&&(JSON.parse=function(text,reviver){function walk(e,t){var n,r,i=e[t];if(i&&typeof i=="object")for(n in i)Object.hasOwnProperty.call(i,n)&&(r=walk(i,n),r!==undefined?i[n]=r:delete i[n]);return reviver.call(e,t,i)}var j;text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),typeof reviver=="function"?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}(),function(e){function o(){try{return r in e&&e[r]}catch(t){return!1}}var t={},n=e.document,r="localStorage",i="script",s;t.disabled=!1,t.version="1.3.17",t.set=function(e,t){},t.get=function(e,t){},t.has=function(e){return t.get(e)!==undefined},t.remove=function(e){},t.clear=function(){},t.transact=function(e,n,r){r==null&&(r=n,n=null),n==null&&(n={});var i=t.get(e,n);r(i),t.set(e,i)},t.getAll=function(){},t.forEach=function(){},t.serialize=function(e){return JSON.stringify(e)},t.deserialize=function(e){if(typeof e!="string")return undefined;try{return JSON.parse(e)}catch(t){return e||undefined}};if(o())s=e[r],t.set=function(e,n){return n===undefined?t.remove(e):(s.setItem(e,t.serialize(n)),n)},t.get=function(e,n){var r=t.deserialize(s.getItem(e));return r===undefined?n:r},t.remove=function(e){s.removeItem(e)},t.clear=function(){s.clear()},t.getAll=function(){var e={};return t.forEach(function(t,n){e[t]=n}),e},t.forEach=function(e){for(var n=0;n<s.length;n++){var r=s.key(n);e(r,t.get(r))}};else if(n.documentElement.addBehavior){var u,a;try{a=new ActiveXObject("htmlfile"),a.open(),a.write("<"+i+">document.w=window</"+i+'><iframe src="/favicon.ico"></iframe>'),a.close(),u=a.w.frames[0].document,s=u.createElement("div")}catch(f){s=n.createElement("div"),u=n.body}var l=function(e){return function(){var n=Array.prototype.slice.call(arguments,0);n.unshift(s),u.appendChild(s),s.addBehavior("#default#userData"),s.load(r);var i=e.apply(t,n);return u.removeChild(s),i}},c=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g");function h(e){return e.replace(/^d/,"___$&").replace(c,"___")}t.set=l(function(e,n,i){return n=h(n),i===undefined?t.remove(n):(e.setAttribute(n,t.serialize(i)),e.save(r),i)}),t.get=l(function(e,n,r){n=h(n);var i=t.deserialize(e.getAttribute(n));return i===undefined?r:i}),t.remove=l(function(e,t){t=h(t),e.removeAttribute(t),e.save(r)}),t.clear=l(function(e){var t=e.XMLDocument.documentElement.attributes;e.load(r);for(var n=0,i;i=t[n];n++)e.removeAttribute(i.name);e.save(r)}),t.getAll=function(e){var n={};return t.forEach(function(e,t){n[e]=t}),n},t.forEach=l(function(e,n){var r=e.XMLDocument.documentElement.attributes;for(var i=0,s;s=r[i];++i)n(s.name,t.deserialize(e.getAttribute(s.name)))})}try{var p="__storejs__";t.set(p,p),t.get(p)!=p&&(t.disabled=!0),t.remove(p)}catch(f){t.disabled=!0}t.enabled=!t.disabled,typeof module!="undefined"&&module.exports&&this.module!==module?module.exports=t:typeof define=="function"&&define.amd?define(t):e.store=t}(Function("return this")())

var Sidebar = function($, app) {
    'use strict';

    var self = this;

    this.app = app;

    /**
     * Initialization.
     *
     * @since 1.0.0
     * @return void
     */
    this.init = function() {

        // Bind toggle event handler
        self.app.$document.on('click', '.js-action-toggle-sidebar', function(event) {
            event.preventDefault();
            self.toggleSidebar(null, true);
        });

        // Initialize last state
        // if (!self.app.isMobile) {
            self.toggleSidebar(store.get('sidebar', true), false);
        // }
    };

    this.toggleSidebar = function(show, animation) {

        // Abort if the sidebar shall be shown but is already visible
        if (show !== null && this.isVisible() === show) {
            return;
        }

        // Initialize show parameter
        if (show === null) {
            show = !this.isVisible();
        }

        // Initialize animation parameter
        if (animation === null) {
            animation = true;
        }

        // Toggle classes on <html> element
        self.app.elements.$html.toggleClass('with-animation', animation);
        self.app.elements.$html.toggleClass('with-sidebar', show);

        // Save state
        store.set('sidebar', show);
    };

    this.isVisible = function() {

        return self.app.elements.$html.hasClass('with-sidebar');

    };

    this.init();

    return {
        toggle: this.toggleSidebar
    };

};


var Dropdown = function($, app) {
    'use strict';

    var self = this;

    this.app = app;

    /**
     * Initialization.
     *
     * @since 1.0.0
     * @return void
     */
    this.init = function() {

        // Bind toggle event handler to all dropdown containers
        self.app.$document.on('click', '.js-dropdown-toggle', function(event) {
            event.stopPropagation();
            event.preventDefault();
            $(this).toggleClass('with-dropdown');
        });

        // Prevent clicks on dropdown from closing it
        self.app.$document.on('click', '.dropdown', function(event) {
            event.stopPropagation();
        });

        // Hide all dropdown on clicks elsewhere
        self.app.$document.on('click', self.hideAll);
    };

    this.hideAll = function() {
        app.$document.find('.js-dropdown-toggle').toggleClass('with-dropdown', false);
    };

    this.init();

    return {};

};


var Theme = function($, app) {
    'use strict';

    /**
     * Self reference.
     * @type {object}
     */
    var self = this;

    /**
     * Save reference to app object.
     * @type {object}
     */
    this.app = app;

    /**
     * Represents the current state
     * @type {Object}
     */
    this.state = {
        font: 'sans-serif',
        size: 'normal'
    };

    /**
     * All avaiable fonts
     * @type {Array}
     */
    this.fonts = ['serif', 'sans-serif'];

    /**
     * All avaiable font sizes
     * @type {Array}
     */
    this.sizes = ['smaller', 'small', 'normal', 'large', 'larger'];

    /**
     * Initialization.
     *
     * @since 1.0.0
     * @return void
     */
    this.init = function() {

        // Init initial state
        self.initState();

        // Bind toggle event handler
        self.app.$document.on('click', '.js-theme-toggle', function(event) {

            // Preparations
            var target = $(this);
            event.preventDefault();

            // Delegate to related setter
            switch(target.data('toggle')) {
                case 'font':
                    self.setFont(target.data('value'));
                    break;
                case 'size':
                    self.changeSize(target.data('value'));
            }
        });

    };

    /**
     * Initialize theme with current saved state.
     * @since 1.0.0
     * @return {void}
     */
    this.initState = function() {

        // Find and apply current font
        $.each(self.fonts, function(index, element) {
            if (self.app.elements.html.hasClass(element)) {
                self.state.font = element;
            }
        });
        self.setFont(store.get('font', self.state.font));

        // Find current size
        $.each(self.sizes, function(index, size) {
            if (self.app.elements.html.hasClass(size)) {
                self.state.size = size;
            }
        });
        self.setSize(store.get('size', self.state.size));

    };

    /**
     * Set a new font.
     * @since 1.0.0
     * @param {string}  font
     * @return {void}
     */
    this.setFont = function(font) {
        self.state.font = font;
        self.app.elements.html.removeClass(self.fonts.join(' '));
        self.app.elements.html.addClass(font);
        store.set('font', font);
    };

    /**
     * Change font size upwards or downwards.
     * @since 1.0.0
     * @param {string}  direction
     * @return {void}
     */
    this.changeSize = function(direction) {

        var currentSize, newSize;

        // Get current and new sizes
        currentSize = self.state.size;
        newSize = self.getNextSize(currentSize, direction);

        console.log('Current ' + currentSize);
        console.log('New ' + newSize);
        console.log('Direction ' + direction);

        // Set new size
        self.setSize(newSize);
    };

    /**
     * Set and store a new font size.
     * @since 1.0.0
     * @param {string}  size
     * @return {void}
     */
    this.setSize = function(size) {
        self.state.size = size;
        self.app.elements.html.removeClass(self.sizes.join(' '));
        self.app.elements.html.addClass(size);
        store.set('size', size);

        console.log('Set size to ' + size);
    };

    /**
     * Get the a new font size based on current size and direction.
     * @since 1.0.0
     * @param {string}  current
     * @param {string}  direction
     * @return {string}
     */
    this.getNextSize = function(current, direction) {
        var i = $.inArray(current, self.sizes);

        // Handle invalid values
        if (i === -1) {
            return 'normal';
        }

        // Handle edge cases
        if ((i <= 0) && (direction === 'down')) {
            return current;
        }
        if ((i >= 4) && (direction === 'up')) {
            return current;
        }

        return (direction === 'up') ? self.sizes[++i] : self.sizes[--i];
    };

    /**
     * Run initialization
     */
    this.init();
};


var Core = function($) {
    'use strict';

    var self = this;

    // Cached DOM lements
    this.$document = $(document);
    this.elements = {
        html: $('html'),
    };

    // Component instances
    this.sidebar = null;
    this.dropdown = null;
    this.theme = null;

    /**
     * Initialization.
     *
     * @since 1.0.0
     */
    this.init = function() {

        // Cache common DOM elements
        self.elements.$html = $('html');

        // Initialize sidebar component
        self.sidebar = new Sidebar($, self);

        // Initialize dropdown component
        self.dropdown = new Dropdown($, self);

        // Initialize theme component
        self.theme = new Theme($, self);
    };

    // Run initialization
    self.init();
};


var App = new Core(jQuery);
